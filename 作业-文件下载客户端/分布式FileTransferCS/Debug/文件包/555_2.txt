嘻嘻嘻嘻嘻啊哈哈哈哈哈呵呵呵
222222
啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊
嘻嘻嘻嘻嘻啊哈哈哈哈哈
嘻嘻嘻嘻嘻
夜夜夜夜耶耶耶
sssssssssssssssssss
吼吼吼
嘻嘻aaa111
退出线程可以有四种方法:
1.线程函数的return返回(最好这样):
其中用线程函数的return返回, 而终止线程是最安全的, 在线程函数return返回后, 会清理函数内申请的类对象, 即调用这些对象的析构函数. 然后会自动调用 _endthreadex()函数来清理 _beginthreadex(...)函数申请的资源(主要是创建的tiddata对象).
2.调用 _endthreadex()函数 或 ExitThread()函数(最好不要):
　　如果使用这两种方法退出线程, 则不会执行线程函数的return语句, 所以就不会调用线程函数作用域内申请的类对象的析构函数, 会造成内存泄露.
　　剩下两种是在程序设计中一定要避免的.
3.用同一个进程中的另一个线程调用 TerminateThread()函数(必须避免);
4.终止该线程所在的进程(绝对避免);
　　但是要说_endthreadex完全没有用肯定是不对的，_endthreadex并不是一个过时的函数，正确的使用并不会带来问题。
　　比如在线程的主函数中，return是_endthreadex的一个良好替代，就像main函数里面return是exit()或ExitProccess()的良好替代一样，但是这不表示exit函数没用。比如线程调用了一个子函数，如果子函数决定退出线程，return是没用的，_endthreadex即可终结线程。
　　但是这个设计不好，因为可能造成LZ提出的资源泄漏。尤其考虑到后台线程终结后的资源泄漏比主线程的资源泄漏更要命（主线程退出后，进程就退出了，OS会清理一切资源，无所谓泄露不泄露，而子线程退出后主线程可能还会运行很久，并且可能有大量的同类型的子线程退出，会造成要命的泄露）
　　良好的设计还是返回线程的主函数，让threadproc来决定是不是要退出，从这个意义上说，_endthreadex没有必要。微软也指出，有些程序员就是要调用exit系列函数（ExitThread，ExitProccess等），没辙，只好提供了。
